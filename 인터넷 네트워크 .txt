어떻게 내 메시지가 복잡한 인터넷망을 거쳐서 서버로 전달될까 - > ip(인터넷 프로토콜)에 대한 이해가 필요하다.
     IP는 뭘까 -> 지정한 IP주소에 데이터 전달, 퍀킷(Packet)이라는 통신단위로 데이터를 전달한다.

     IP패킷(package + bucket) 정보 
      -> 출발지IP, 목적지 IP, 기타(...) 안에
      --> 전송 데이터

    프로토콜에 의해 IP패킷이 노드들을 거쳐서 도착iP까지 전송됨 / 반대의 경우도 똑같다.

    IP프로토콜의 한계 -> 
        비 연결성 : 패킷을 받을 대상이 없거나 서비스 불능 상태여도 패킷이 전송됨.
        비 신뢰성 : 중간에 패킷이 사라진다면(패킷 소실) ?, 보낸 여러개의 패킷이 순서대로 안오면?(패킷의 용량이 클때 전달순서의 문제)
        프로그램 구분  : 같은 IP를 사용하는 서버에서 통신하는 애플리케이션이 둘 이상이면?( ex: 게임도 하고 노래도 듣고)

    TCP 프로토콜로 문제를 해결할 수 있다! ->

        인터넷 프로토콜 스택의 4계층
        애플리케이션 계층 - HTTP , FTP
        전송계층 - TCP, UDP
        인터넷 계층 - IP
        네트워크 인터페이스 계층

    TCP/IP 패킷
        > 출발지IP, 목적지 IP, 기타(...) 안에( IP패킷 )
        -> 출발지 PORT, 목적지 PORT, 전송제어정보, 순서정보, 검증정보 안에(TCP 세그먼트)
        --> 전송 데이터
    
    TCP ( 전송 제어 프로토콜 / Transmisson Control Protocol)특징
        -> 연결지향 ( TCP 3 way handshake - 가상연결) /연결이 되어있나 확인후 메시지를 전달
        -> 데이터 전달 보증( 손실시 확인가능)
        -> 순서를 보장해줌
    
    TCP 3 way handshake ( 논리적으로 연결이 되었다 . 중간 노드는 몰라용 )
        1. SYN(접속요청) 이라는 메시지를 서버한테 보냄
        2. SYN + ACK(요청 수락) 라는 메시지를 클라이언트한테 보냄
        3. ACK 과 함께 데이터 전송가능!

    데이터 전달 보증
        1. 클라이언트 : " 데이터 전송~ "
        2. 서버 : " 데이터 잘 받았음 ~ "

    순서 보장
        1. 패킷1 패킷2 패킷3 순서로 전송
        2. 만약 패킷1 패킷3 패킷2 순서로 도착 한다면
        3. 서버 : " 패킷2 부터 다시 보내세요. "
        
    UDP 프로토콜
        연결지향X
        데이터 전달보증x
        순서보장x

        하지만 단순하고 빠르다.

        -> IP와 거의 같다, + PORT, + 체크섬(메시지가 맞는지 검증하는 데이터) 정도만 추가
        -> 어플리케이션에서 추가 작업이 필요하다. 
    
    PORT ( 뜻 : 항구 )
        한번에 둘 이상 연결해야 하면 ?? ( 게임도하고 화상통화도 하고 웹 브라우저도 하고 이게 게임패킷이야 화상통화 패킷이야 뭐야 )
        TCP 프로토콜에는 출발지 PORT, 목적지 PORT가 있다,
            -> 같은 IP안에서 프로세스를 구분,

            게임 : 8090 PORT -> 서버 : 11220 PORT
            화상통화 : 21000 PORT -> 서버 : 32202 PORT
            웹 브라우저 : 10010 PORT -> 서버 : 80 PORT

            IP는 아파트, PORT는 호수.

            0 ~ 65535 할당가능

            0 ~ 1023 : 잘 알려진 포트, 사용하지 않는게 좋다.

    DNS
        IP는 기억하기 너무 어려운데요; ( 200.200.200.2 ), 변경될 수 도 있다. 그러면 어떡하지...?
        Domain Name System ( 도메인 네임 시스템 )

        중간에 전화번호부같은 서버를 제공,
        도메인 명을 등록하고 ip주소를 변환가능~

        DNS 서버에 도메인을 등록 ( 도메인은 구매해야 합니다)
        
        도메인 서버로 google.com IP 주소를 달라고 요청 - IP주소로 접속



        
    

        


